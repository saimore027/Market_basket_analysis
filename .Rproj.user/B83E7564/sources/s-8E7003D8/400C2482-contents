library(arules)
library(arulesViz)
#library(datasets)
groceries <- read.csv("C:\\Users\\Sai more\\Downloads\\groceries.csv")
#itemFrequencyPlot(groceries,topN=20,type="absolute")
#rules <- apriori(groceries, parameter = list(supp = 0.0001, conf = 0.8))
#inspect(rules[1:2])
#rules<-sort(rules, by="confidence", decreasing=TRUE)
#inspect(rules[1:2])
#rules <- apriori(groceries, parameter = list(supp = 0.0001, conf = 0.8,maxlen=3))
#inspect(rules[1:2])
#subset.matrix <- is.subset(rules, rules)
#subset.matrix[lower.tri(subset.matrix, diag=T)] <- NA
#redundant <- colSums(subset.matrix, na.rm=T) >= 1
#rules.pruned <- rules[!redundant]
#rules<-rules.pruned
#inspect(rules[1:2])
#rules <- apriori(groceries, parameter = list(supp = 0.0001, conf = 0.8,maxlen=3))
#rules<-apriori(data=groceries, parameter=list(supp=0.0001,conf = 0.08),
#               appearance = list(default="lhs",rhs="whole milk"),
#               control = list(verbose=F))
#rules<-sort(rules, decreasing=TRUE,by="confidence")
#inspect(rules[1:2])
#plot(rules,method="graph",interactive=TRUE,shading=NA)
#read.transactions(file.choose())
rules <- apriori(groceries)
rules <- apriori(groceries, parameter = list(supp = 0.0001, conf = 0.8))
inspect(rules[1:5])
rules<-sort(rules, by="support", decreasing=T)
inspect(rules[1:5])
rules
redundant_rules <- is.redundant(rules)
redundant_rules
summary(redundant_rules)
rules<-rules[!redundant_rules]
rules
inspect(rules[1:10])
rules_margarine <- apriori(groceries,parameter = list(supp = 0.001, conf = 0.8), appearance = list(default = "rhs", lhs = "margarine="))
rules_margarine <- apriori(groceries,parameter = list(supp = 0.00000001, conf = 0.1), appearance = list(default = "rhs", lhs = "citrus.fruit=canned beer"))
inspect(rules_margarine[1:2])
plot(rules, method = "graph")
plot(rules, method = "graph", interactive = T)